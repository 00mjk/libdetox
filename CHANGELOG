fastBT 0.2.2 - 2011-01-05
- Added a couple of new instructions and fixed the representation tables
  - especially 660f71, 660f72, 660f73 prefixed ones
- Adapted formating and used astyle to sync identation
- Added lots of additional tables
  - 0x0f38 and 0x0f3b (including 0x66 and 0xf2 prefixes for these tables)
    these boil down to tables A4 and A5 of the intel instruction manual

fastBT 0.2.1 - 2010-03-25
- Fixed a bug in the opcode tables (added correct src operands for movs* and cmps*)
- Fixup of includes (removed lots of <> includes and some "" includes)
- Bugfixing of disassembler and low level output
- Removed dependencies on libc printf, added buffering for faster output
- Extended debugging information and output available (for binary analysis)
- Reimplementation of lots of system calls and library functions in libc.c and libc.h
  * System calls are possible via int 80 and sysenter
- Removed dependencies from the libc (str functions, sysconf, memcpy)
- Reimplementation of some system calls to reduce libc dependencies (mmap, munmap)

fastBT 0.2.0 - 2010-03-10
- Removal of the bastard disassembler
- Change of the layout of the translation table (added more auxiliary information)
- Debugging mode includes dynamic code dumping and automatic disassembly using
  the same tables that are used for the translation process
- Better documentation of the security features in the Makefile
- Clearer structure and removal of dead code

fastBT 0.1.0 - 2009-11-19
- Lots of bug fixing and straigthening of the security features
- Public release at 26c3 (26th chaos communication congress in Berlin)
- Lots of new optimizations
  - Return cache and fast return
  - Optimizations for indirect calls and indirect jumps
  - Adaptive optimizations that first cache then redirect to fast lookup
  - Table optimizations
  
fastBT 0.1.0pre2 - 2009-10-22
- Lots of bug fixing
- Some security extensions (nx enforcement, secuBT stuff)
- Lots of new optimizations
  - Jumptable optimization
  - Fast return optimization
- Special optimization for low-level functions to be independent from libc
  memory management
- Special IO functions to be independent from libc (not reentrant)

fastBT 0.1.0pre - 2009-05-31
- Initial public release
- Used bastard disassembler
- Complete support for ia32 tables
- Handle pthreads
